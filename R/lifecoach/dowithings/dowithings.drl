import java.util.HashMap;
import org.json.JSONObject;
import java.util.Date; 
import java.text.SimpleDateFormat; 
import com.satimetry.nudge.Output;

global java.util.HashMap output;
global SimpleDateFormat inSDF;
global SimpleDateFormat outSDF;

function void print(String txt) {
   System.out.println(txt);
}

// Declare inside drl so we can manipulate objects naturally
declare Participant
  @role( fact )
  id : String @key
  dayofweek : String
end

// Declare inside drl so we can manipulate objects naturally
declare Observation
  @role( event )
  @timestamp ( obsdate )
  id : String @key
  obsdate : Date @key
  obsvalue : Double
end

rule "rulePrintJSON"
   salience 2000
   when
      $input : JSONObject() from entry-point DEFAULT
   then
      System.out.println($input.toString());
      System.out.println($input.get("obsdate"));
end

rule "ruleInsertObservation"
  salience 2000
  when
    $input : JSONObject() from entry-point DEFAULT 
  then
    inSDF = new SimpleDateFormat("yyyy-M-d");
    Date date = inSDF.parse( $input.get("obsdate").toString() );
    Observation observation = new Observation($input.get("username").toString(), date);
    observation.setObsvalue( Double.parseDouble($input.get("obsvalue").toString()) );
    insert(observation);
    print(drools.getRule().getName() + "->" + observation.getId() + "-" + 
      observation.getObsdate() + "-" + 
      observation.getObsvalue() );
end

rule "ruleInsertParticipant"
  salience 1000
  when
    $input : JSONObject() from entry-point DEFAULT 
    not Participant( id == $input.get("username").toString() )
  then
    Date today = new Date();
    String dayofweek = new SimpleDateFormat("EE").format(today);
    Participant $participant = new Participant( $input.get("username").toString() );
    $participant.setDayofweek(dayofweek);
    insert( $participant );
    print(drools.getRule().getName() + "->" + $participant.getId() );
end

rule "ruleAverageBmi"
   salience -1000
   no-loop true
   when
      $participant : Participant()
      $obsvalueAverage : Number( doubleValue > 0) from accumulate(
         Observation( $obsvalue : obsvalue > 28 && < 30, $participant.id == id ) over window:time( 30d ),
         average( $obsvalue ) )
   then
      Date today = new Date(); 
      java.util.Date date = new Date();
      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
      String datef = sdf.format( date );

      JSONObject joutput = new JSONObject();
      joutput.put("id", $participant.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", datef); 
      joutput.put("rulemsg", "Nudge says that your BMI averaged " + String.format("%.2f", $obsvalueAverage) + " over the past 30 days");
      joutput.put("ruledata", $obsvalueAverage);
      Output $output = new Output(joutput.toString());
      insert($output);
      print(drools.getRule().getName() + "->" + $obsvalueAverage);
end

rule "ruleHighBmi"
   salience -1000
   no-loop true
   when
      $participant : Participant()
      $obsvalueHigh : Number( doubleValue > 0) from accumulate(
         Observation( $obsvalue : obsvalue, $participant.id == id ) over window:time( 30d ),
         max( $obsvalue ) )
   then
      Date today = new Date(); 
      java.util.Date date = new Date();
      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
      String datef = sdf.format( date );

      JSONObject joutput = new JSONObject();
      joutput.put("id", $participant.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", datef); 
      joutput.put("rulemsg", "Nudge says that your BMI maximum was " + String.format("%.2f", $obsvalueHigh) + " over the past 30 days");
      joutput.put("ruledata", $obsvalueHigh);
      Output $output = new Output(joutput.toString());
      insert($output);
      print(drools.getRule().getName() + "->" + $obsvalueHigh);
end

rule "ruleLowBmi"
   salience -1000
   no-loop true
   when
      $participant : Participant()
      $obsvalueLow : Number( doubleValue > 0) from accumulate(
         Observation( $obsvalue : obsvalue, $participant.id == id ) over window:time( 30d ),
         min( $obsvalue ) )
   then
      Date today = new Date(); 
      java.util.Date date = new Date();
      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
      String datef = sdf.format( date );

      JSONObject joutput = new JSONObject();
      joutput.put("id", $participant.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", datef); 
      joutput.put("rulemsg", "Nudge says that your BMI minimum was " + String.format("%.2f", $obsvalueLow) + " over the past 30 days");
      joutput.put("ruledata", $obsvalueLow);
      Output $output = new Output(joutput.toString());
      insert($output);
      print(drools.getRule().getName() + "->" + $obsvalueLow);
end
