import java.util.HashMap;
import org.json.JSONObject;
import java.util.Date; 
import java.text.SimpleDateFormat; 
import com.satimetry.nudge.Output;

global java.util.HashMap output;
global SimpleDateFormat inSDF;
global SimpleDateFormat outSDF;

function void print(String txt) {
   System.out.println(txt);
}

// Declare inside drl so we can manipulate objects naturally
declare Participant
  @role( fact )
  id : String @key
end

// Declare inside drl so we can manipulate objects naturally
declare Activity
  @role( event )
  @timestamp ( stepDate )
  id : String @key
  stepDate : Date @key
  stepCount : Integer
end

declare UserRule
  @role( fact )
  id : String @key
  ruleName : String @key
end

rule "ruleInsertActivity"
  salience 2000
  when
    $input : JSONObject() from entry-point DEFAULT 
  then
    inSDF = new SimpleDateFormat("yyyy-M-d");
    Date date = inSDF.parse( $input.get("stepDate").toString() );
    Activity activity = new Activity($input.get("id").toString(), date);
    activity.setStepCount( Integer.parseInt($input.get("stepCount").toString()) );
    insert(activity);
    print(drools.getRule().getName() + "->" + activity.getId() + "-" + activity.getStepDate() + "-" + activity.getStepCount() );
end

rule "ruleInsertParticipant"
  salience 1000
  when
    $input : JSONObject() from entry-point DEFAULT 
    not Participant( id == $input.get("id") )
  then
    Participant $participant = new Participant( $input.get("id").toString() );
    insert( $participant );
    print(drools.getRule().getName() + "->" + $participant.getId() );
end

rule "ruleInsertUserRule"
  salience 999
  no-loop false
  when
    $participant : Participant()
    not UserRule (id == $participant.getId() )
  then
    UserRule userRule1 = new UserRule($participant.getId(), "ruleOutputZeroSteps");
    insert(userRule1);
    print(drools.getRule().getName() + "->" + userRule1.getId() + '-' + userRule1.getRuleName() );
    UserRule userRule2 = new UserRule($participant.getId(), "ruleOutputHighSteps");
    insert(userRule2);
    print(drools.getRule().getName() + "->" + userRule2.getId() + '-' + userRule2.getRuleName() );
    UserRule userRule3 = new UserRule($participant.getId(), "ruleOutputLowSteps");
    insert(userRule3);
    print(drools.getRule().getName() + "->" + userRule3.getId() + '-' + userRule3.getRuleName() );
end


rule "ruleOutputHighSteps"
   salience -100
   when
		$activity : Activity( stepCount >= 10000)
      exists UserRule (id == $activity.getId() && ruleName == "ruleOutputHighSteps")
	then
      outSDF = new SimpleDateFormat("E dd MMM yyyy");
      JSONObject joutput = new JSONObject();
      joutput.put("id", $activity.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", $activity.getStepDate().toString());
      joutput.put("rulemsg", "Nudge says you were over 10,000 steps on " + outSDF.format($activity.getStepDate()));
		joutput.put("ruledata", $activity.getStepCount());
      Output $output = new Output(joutput.toString());
      insert($output);
   	print(drools.getRule().getName() + "->" + $activity.getId() );
end

rule "ruleOutputLowSteps"
	salience -200
	when
		$activity : Activity( stepCount < 5000, stepCount > 0)
      exists UserRule (id == $activity.getId() && ruleName == "ruleOutputLowSteps")
   then
      outSDF = new SimpleDateFormat("E dd MMM yyyy");
      JSONObject joutput = new JSONObject();
      joutput.put("id", $activity.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", $activity.getStepDate().toString());
		joutput.put("rulemsg", "Nudge says you were below 5,000 steps on " + outSDF.format($activity.getStepDate()));
		joutput.put("ruledata", $activity.getStepCount());
      Output $output = new Output(joutput.toString());
      insert($output);
   	print(drools.getRule().getName() + "->" + $activity.getId() );
end

rule "ruleOutputZeroSteps"
   salience -300
	when
		$activity : Activity( stepCount == 0)
      exists UserRule (id == $activity.getId() && ruleName == "ruleOutputZeroSteps")
	then
      outSDF = new SimpleDateFormat("E dd MMM yyyy");
      JSONObject joutput = new JSONObject();
      joutput.put("id", $activity.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", $activity.getStepDate().toString());
      joutput.put("rulemsg", "Nudge says that no steps were recorded on " + outSDF.format($activity.getStepDate()));
		joutput.put("ruledata", $activity.getStepCount());
      Output $output = new Output(joutput.toString());
      insert($output);
   	print(drools.getRule().getName() + "->" + $activity.getId() );
end

rule "ruleAverageSteps"
  salience -1000
  no-loop true
  when
     $stepCountAverage : Number( intValue > 0) from accumulate(
        Activity( $stepCount : stepCount ),
          average( $stepCount ) )
  then
     print(drools.getRule().getName() + "->" + $stepCountAverage);
end

rule "ruleHighStepCount"
  salience -1000
  no-loop true
  when
     $participant : Participant()
     $stepCountTotal : Number( intValue > 0) from accumulate(
      Activity( $stepCount : stepCount >= 10000, $participant.id == id ) over window:time( 14d ),
          count( $stepCount ) )
  then
      Date today = new Date(); 
      JSONObject joutput = new JSONObject();
      joutput.put("id", $participant.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", today); 
      joutput.put("rulemsg", "Nudge says that you exceeded 10,000 steps " + $stepCountTotal + " times in the past 14 days");
   	joutput.put("ruledata", $stepCountTotal);
      Output $output = new Output(joutput.toString());
      insert($output);
      print(drools.getRule().getName() + "->" + $stepCountTotal);
end

rule "ruleAverageStepCount"
  salience -1000
  no-loop true
  when
     $participant : Participant()
     $stepCountAverage : Number( intValue > 0) from accumulate(
      Activity( $stepCount : stepCount > 0, $participant.id == id ) over window:time( 7d ),
          average( $stepCount ) )
  then
      Date today = new Date(); 
      JSONObject joutput = new JSONObject();
      joutput.put("id", $participant.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", today);      
      joutput.put("rulemsg", "Nudge says that you averaged " + 
         String.format("%.2f", $stepCountAverage) + 
         " steps per day over the last 10 days");
      joutput.put("ruledata", $stepCountAverage);
      Output $output = new Output(joutput.toString());
      insert($output);
      print(drools.getRule().getName() + "--->" + $stepCountAverage + "-" + joutput.get("ruledate") );
end

rule "ruleZeroStepCount"
  salience -1000
  no-loop true
  when
     $participant : Participant()
     $stepCountTotal : Number( intValue > 0) from accumulate(
      Activity( $stepCount : stepCount == 0, $participant.id == id ) over window:time( 5d ),
          count( $stepCount ) )
  then
      Date today = new Date(); 
      JSONObject joutput = new JSONObject();
      joutput.put("id", $participant.getId());
      joutput.put("rulename", drools.getRule().getName());
      joutput.put("ruledate", today);
      joutput.put("rulemsg", "Nudge says that you recorded no steps " + $stepCountTotal + " times in the last 5 days");
      joutput.put("ruledata", $stepCountTotal);
      Output $output = new Output(joutput.toString());
      insert($output);
      print(drools.getRule().getName() + "->" + $stepCountTotal);
end

rule "pollDailyWellness"
  salience -1000
  no-loop true
  when
     $participant : Participant()
  then
      String ruleName = drools.getRule().getName();
      Date today = new Date(); 
      JSONObject joutput = new JSONObject();
      joutput.put("id", $participant.getId());
      joutput.put("rulename", ruleName);
      joutput.put("ruledate", today);
      joutput.put("rulemsg", "Nudge reminds you to complete the " + ruleName + 
         " survey at http://www.thenudgemachine.com/pollq.php?pollid=12");
      joutput.put("ruledata", 0);
      Output $output = new Output(joutput.toString());
      insert($output);
      print(ruleName + "->");
end

rule "ruleGetUserRules"
   salience 0
   when
      $input : UserRule()
   then
      print(drools.getRule().getName() + "->" + $input.getId() + "-" + $input.getRuleName());
end
