
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Send notification msg to database
> 
> rootdir <- "/Users/stefanopicozzi/websites/nudge"
> user <- "stefano"
> ppi <- 300
> userid <- "7"
> programid <- "1"
> 
> wd <- paste(rootdir, "/R/fitbit/user/", user, sep="")
> setwd(wd)
> 
> library(rjson)
> library("RMySQL")
Loading required package: DBI
> 
> con <- dbConnect(dbDriver("MySQL"), host = "127.0.0.1", dbname = "nudge", user = "root", password = "")
> dbListTables(con)
 [1] "hit"             "msg"             "poll"            "pollq"          
 [5] "program"         "programrule"     "programrulepoll" "programruleuser"
 [9] "programurl"      "programuser"     "rule"            "user"           
[13] "userdiary"       "userobs"        
> 
> load("userOptionsDF.dat")
> smsDF <- cbind(userOptionsDF, smstxt = userOptionsDF$rulename)
> smsDF <- data.frame(lapply(smsDF, as.character), stringsAsFactors = FALSE)
> stepDateTime <- as.POSIXct(smsDF$ruledate, format = "%a %b %d %H:%M:%S EST %Y")
> #stepDateTime <- as.POSIXct(smsDF$ruledate, format = "%Y-%m-%d")
> smsDF <-cbind(smsDF, stepDateTime = stepDateTime)
> 
> today <- Sys.Date()
> print(today)
[1] "2014-01-08"
> for (i in 1:nrow(smsDF)) {
+    dateTime <- smsDF[i, "stepDateTime"]
+    diff <- as.numeric(difftime(today, dateTime, tz = "EST", units = c("days")))
+    if ( diff > 10 ) {
+       next
+    }
+    
+    print(smsDF[i, "smstxt" ])  
+    
+    username <- smsDF[i, "username"]
+ 
+    rulename <- paste("'", smsDF[i, "rulename" ], "'", sep="")
+    ruledate <- paste("'", smsDF[i, "stepDateTime" ], "'", sep="")
+    msgtxt <- paste("'", smsDF[i, "rulemsg" ], "'", sep="")
+       
+    sqlStmt <- paste(
+       " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)",
+       "  VALUES (", 
+       programid, ", ",
+       userid, ", ",
+       rulename, ", ",
+       ruledate, ", ",      
+       msgtxt, "); ",   
+       sep = "")
+    
+    print(sqlStmt)   
+    result <- dbGetQuery(con, sqlStmt)   
+ }
[1] "ruleAverageStepCount"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleAverageStepCount', '2014-01-08 10:31:12', 'Nudge says that you averaged 4189.428571428572 steps per day over the last 10 days'); "
[1] "ruleHighStepCount"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleHighStepCount', '2014-01-08 10:31:12', 'Nudge says that you exceeded 10,000 steps 1 times in the past 20 days'); "
[1] "ruleOutputHighSteps"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleOutputHighSteps', '2014-01-03', 'Nudge says you were over 10,000 steps on Fri 03 Jan 2014'); "
[1] "ruleOutputLowSteps"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleOutputLowSteps', '2014-01-02', 'Nudge says you were below 5,000 steps on Thu 02 Jan 2014'); "
[1] "ruleOutputLowSteps"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleOutputLowSteps', '2014-01-05', 'Nudge says you were below 5,000 steps on Sun 05 Jan 2014'); "
[1] "ruleOutputLowSteps"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleOutputLowSteps', '2014-01-08', 'Nudge says you were below 5,000 steps on Wed 08 Jan 2014'); "
[1] "ruleOutputLowSteps"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleOutputLowSteps', '2014-01-04', 'Nudge says you were below 5,000 steps on Sat 04 Jan 2014'); "
[1] "ruleOutputZeroSteps"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleOutputZeroSteps', '2014-01-01', 'Nudge says that no steps were recorded on Wed 01 Jan 2014'); "
[1] "ruleZeroStepCount"
[1] " INSERT INTO msg (programid, userid, rulename, ruledate, msgtxt)  VALUES (1, 7, 'ruleZeroStepCount', '2014-01-08 10:31:12', 'Nudge says that you recorded no steps 1 times in the last 15 days'); "
> 
> dbDisconnect(con)
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  0.645   0.031   0.674 
